{"ir": "[deploy,\n  0,\n  [seq,\n    [if, [le, calldatasize, 3], [goto, fallback]],\n    [with,\n      _calldata_method_id,\n      [shr, 224, [calldataload, 0]],\n      [seq,\n        [assert, [iszero, callvalue]],\n        [if,\n          [iszero,\n            [xor,\n              _calldata_method_id,\n              1260826489 <0x4b26af79: swap(int128,int128,uint256,uint256)>]],\n          [seq,\n            [assert, [ge, calldatasize, 132]],\n            [goto, external_swap__int128_int128_uint256_uint256__common],\n            [seq,\n              [label,\n                external_swap__int128_int128_uint256_uint256__common,\n                var_list,\n                [seq,\n                  # Line 68\n                  [mstore,\n                    544,\n                    /* int128 bounds check */ \n                    [with,\n                      val,\n                      [calldataload, 4],\n                      [seq,\n                        [assert, [iszero, [xor, val, /* promote int128 */ [signextend, 15, val]]]],\n                        val]]],\n                  [mstore,\n                    576,\n                    /* int128 bounds check */ \n                    [with,\n                      val,\n                      [calldataload, 36],\n                      [seq,\n                        [assert, [iszero, [xor, val, /* promote int128 */ [signextend, 15, val]]]],\n                        val]]],\n                  [seq,\n                    # Line 69\n                    /* self._safeTransferFrom(COINS[i], msg.sender, self, dx) */ \n                    [seq,\n                      [unique_symbol, self._safeTransferFrom(COINS[i], msg.sender, self, dx)29],\n                      [seq,\n                        [mstore,\n                          64,\n                          [mload,\n                            /* COINS[i] */ \n                            [with,\n                              val,\n                              [seq,\n                                [seq,\n                                  [mstore, 608, 611382286831621467233887798921843936019654057231 <COINS>],\n                                  [mstore, 640, 917551056842671309452305380979543736893630245704 <COINS>],\n                                  [mstore, 672, 1248875146012964071876423320777688075155124985543 <COINS>]],\n                                608],\n                              [add,\n                                val,\n                                [shl,\n                                  5,\n                                  [with,\n                                    clamp_arg,\n                                    [mload, 544 <i>],\n                                    [seq, [assert, [le, clamp_arg, 2]], clamp_arg]]]]]]],\n                        [mstore, 96, caller <msg.sender>],\n                        [mstore, 128, address <self>],\n                        [mstore, 160, [calldataload, 68 <dx (4+64)>]]],\n                      [goto,\n                        internal__safeTransferFrom__address_address_address_uint256_,\n                        _sym_label1],\n                      [label, label1, var_list, pass]],\n                    # Line 70\n                    /* self._safeApprove(COINS[i], POOL, dx) */ \n                    [seq,\n                      [unique_symbol, self._safeApprove(COINS[i], POOL, dx)36],\n                      [seq,\n                        [mstore,\n                          64,\n                          [mload,\n                            /* COINS[i] */ \n                            [with,\n                              val,\n                              [seq,\n                                [seq,\n                                  [mstore, 608, 611382286831621467233887798921843936019654057231 <COINS>],\n                                  [mstore, 640, 917551056842671309452305380979543736893630245704 <COINS>],\n                                  [mstore, 672, 1248875146012964071876423320777688075155124985543 <COINS>]],\n                                608],\n                              [add,\n                                val,\n                                [shl,\n                                  5,\n                                  [with,\n                                    clamp_arg,\n                                    [mload, 544 <i>],\n                                    [seq, [assert, [le, clamp_arg, 2]], clamp_arg]]]]]]],\n                        [mstore, 96, 1088906751082319308397361080106171025543247425991 <POOL>],\n                        [mstore, 128, [calldataload, 68 <dx (4+64)>]]],\n                      [goto, internal__safeApprove__address_address_uint256_, _sym_label2],\n                      [label, label2, var_list, pass]],\n                    # Line 72\n                    /* IStableSwap(POOL).exchange(i, j, dx, min_dy) */ \n                    [seq,\n                      [unique_symbol, IStableSwap(POOL).exchange(i, j, dx, min_dy)37],\n                      [mstore, 608, 1039147300],\n                      [seq,\n                        [mstore, 640, [mload, 544 <i>]],\n                        [mstore, 672, [mload, 576 <j>]],\n                        [calldatacopy, 704, 68, 64]],\n                      [assert, [extcodesize, 1088906751082319308397361080106171025543247425991 <IStableSwap(POOL)>]],\n                      [if,\n                        [iszero,\n                          [call,\n                            gas,\n                            1088906751082319308397361080106171025543247425991 <IStableSwap(POOL)>,\n                            0,\n                            636,\n                            132,\n                            608,\n                            0]],\n                        [seq, [returndatacopy, 0, 0, returndatasize], [revert, 0, returndatasize]]]],\n                    # Line 74\n                    /* bal: uint256 = ERC20(COINS[j]).balanceOf(self) */ \n                    [mstore,\n                      608,\n                      [mload,\n                        /* ERC20(COINS[j]).balanceOf(self) */ \n                        [with,\n                          external_contract,\n                          [mload,\n                            /* ERC20(COINS[j]) */ \n                            [with,\n                              val,\n                              [seq,\n                                [seq,\n                                  [mstore, 640, 611382286831621467233887798921843936019654057231 <COINS>],\n                                  [mstore, 672, 917551056842671309452305380979543736893630245704 <COINS>],\n                                  [mstore, 704, 1248875146012964071876423320777688075155124985543 <COINS>]],\n                                640],\n                              [add,\n                                val,\n                                [shl,\n                                  5,\n                                  [with,\n                                    clamp_arg,\n                                    [mload, 576 <j>],\n                                    [seq, [assert, [le, clamp_arg, 2]], clamp_arg]]]]]],\n                          [seq,\n                            [unique_symbol, ERC20(COINS[j]).balanceOf(self)45],\n                            [mstore, 736, 1889567281],\n                            [mstore, 768, address <self>],\n                            [if,\n                              [iszero, [staticcall, gas, external_contract, 764, 36, 736, 32]],\n                              [seq, [returndatacopy, 0, 0, returndatasize], [revert, 0, returndatasize]]],\n                            [seq,\n                              [assert, [ge, returndatasize, 32]],\n                              736 <ERC20(COINS[j]).balanceOf(self) returndata buffer>]]]]],\n                    # Line 75\n                    /* self._safeTransfer(COINS[j], msg.sender, bal) */ \n                    [seq,\n                      [unique_symbol, self._safeTransfer(COINS[j], msg.sender, bal)54],\n                      [seq,\n                        [mstore,\n                          64,\n                          [mload,\n                            /* COINS[j] */ \n                            [with,\n                              val,\n                              [seq,\n                                [seq,\n                                  [mstore, 640, 611382286831621467233887798921843936019654057231 <COINS>],\n                                  [mstore, 672, 917551056842671309452305380979543736893630245704 <COINS>],\n                                  [mstore, 704, 1248875146012964071876423320777688075155124985543 <COINS>]],\n                                640],\n                              [add,\n                                val,\n                                [shl,\n                                  5,\n                                  [with,\n                                    clamp_arg,\n                                    [mload, 576 <j>],\n                                    [seq, [assert, [le, clamp_arg, 2]], clamp_arg]]]]]]],\n                        [mstore, 96, caller <msg.sender>],\n                        [mstore, 128, [mload, 608 <bal>]]],\n                      [goto, internal__safeTransfer__address_address_uint256_, _sym_label3],\n                      [label, label3, var_list, pass]],\n                    [exit_to,\n                      _sym_external_swap__int128_int128_uint256_uint256__cleanup,\n                      return_pc],\n                    pass]]],\n              [label, external_swap__int128_int128_uint256_uint256__cleanup, var_list, stop]]]]]],\n    [goto, fallback],\n    [label, fallback, var_list, /* Default function */ [revert, 0, 0]],\n    # Line 19\n    [seq,\n      [label,\n        internal__safeTransfer__address_address_uint256_,\n        [var_list, return_pc],\n        [seq,\n          # Line 20\n          /* res: Bytes[32] = raw_call(\n                  coin,\n                  concat(\n                      method_id(\"transfer(address,uint256)\"),\n                      convert(to, bytes32),\n                      convert(amount, bytes32),\n                  ),\n                  max_outsize=32,\n              ) */ \n          [with,\n            src,\n            /* raw_call(\n                    coin,\n                    concat(\n                        method_id(\"transfer(address,uint256)\"),\n                        convert(to, bytes32),\n                        convert(amount, bytes32),\n                    ),\n                    max_outsize=32,\n                ) */ \n            [seq,\n              [if,\n                [iszero,\n                  [seq,\n                    # Line 22\n                    /* concat(\n                                method_id(\"transfer(address,uint256)\"),\n                                convert(to, bytes32),\n                                convert(amount, bytes32),\n                            ) */ \n                    [with,\n                      concat_ofst,\n                      0,\n                      [seq,\n                        [with,\n                          arg,\n                          /* method_id(\"transfer(address,uint256)\") */ \n                          [seq,\n                            [mstore, 224, 4],\n                            [mstore,\n                              256,\n                              76450787359836037641860180984291677749980919077056822294353438043884394381312],\n                            224],\n                          [with,\n                            len,\n                            [mload, arg],\n                            [seq,\n                              [with,\n                                src,\n                                [add, arg, 32],\n                                [with, dst, [add, 320, concat_ofst], [mstore, dst, [mload, src]]]],\n                              [set, concat_ofst, [add, concat_ofst, len]]]]],\n                        [mstore,\n                          [add, 320, concat_ofst],\n                          /* convert(to, bytes32) */ [with, arg, [mload, 96 <to>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore,\n                          [add, 320, concat_ofst],\n                          /* convert(amount, bytes32) */ [with, arg, [mload, 128 <amount>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore, 288 <concat destination>, concat_ofst],\n                        288 <concat destination>]],\n                    [call,\n                      gas,\n                      [mload, 64 <coin>],\n                      0 <value>,\n                      320,\n                      [mload, 288 <concat destination>],\n                      448,\n                      32]]],\n                [seq, [returndatacopy, 0, 0, returndatasize], [revert, 0, returndatasize]]],\n              [seq,\n                [mstore, 416, [select, [lt, 32, returndatasize], 32, returndatasize]],\n                416]],\n            [with,\n              len,\n              [mload, src],\n              [seq,\n                [mstore, 160, len],\n                [with, src, [add, src, 32], [mstore, 192, [mload, src]]]]]],\n          # Line 30\n          /* if len(res) > 0:\n                  assert convert(res, bool) */ \n          [if,\n            /* len(res) > 0 (len(res)>0) (len(res)!=0) */ [iszero, [iszero, /* len(res) */ [mload, 160 <res>]]],\n            [seq,\n              # Line 31\n              /* assert convert(res, bool) */ \n              [assert,\n                /* convert(res, bool) */ \n                [iszero,\n                  [iszero,\n                    /* ('__intrinsic__byte_array_to_num(bool)',) */ \n                    [shr,\n                      [shl, 3, [sub, 32, [mload, 160 <res>]]],\n                      [mload, 192]]]]],\n              pass]],\n          [exit_to,\n            _sym_internal__safeTransfer__address_address_uint256__cleanup,\n            return_pc],\n          pass]],\n      [label,\n        internal__safeTransfer__address_address_uint256__cleanup,\n        [var_list, return_pc],\n        [exit_to, return_pc]]],\n    # Line 35\n    [seq,\n      [label,\n        internal__safeTransferFrom__address_address_address_uint256_,\n        [var_list, return_pc],\n        [seq,\n          # Line 36\n          /* res: Bytes[32] = raw_call(\n                  coin,\n                  concat(\n                      method_id(\"transferFrom(address,address,uint256)\"),\n                      convert(_from, bytes32),\n                      convert(to, bytes32),\n                      convert(amount, bytes32),\n                  ),\n                  max_outsize=32,\n              ) */ \n          [with,\n            src,\n            /* raw_call(\n                    coin,\n                    concat(\n                        method_id(\"transferFrom(address,address,uint256)\"),\n                        convert(_from, bytes32),\n                        convert(to, bytes32),\n                        convert(amount, bytes32),\n                    ),\n                    max_outsize=32,\n                ) */ \n            [seq,\n              [if,\n                [iszero,\n                  [seq,\n                    # Line 38\n                    /* concat(\n                                method_id(\"transferFrom(address,address,uint256)\"),\n                                convert(_from, bytes32),\n                                convert(to, bytes32),\n                                convert(amount, bytes32),\n                            ) */ \n                    [with,\n                      concat_ofst,\n                      0,\n                      [seq,\n                        [with,\n                          arg,\n                          /* method_id(\"transferFrom(address,address,uint256)\") */ \n                          [seq,\n                            [mstore, 256, 4],\n                            [mstore,\n                              288,\n                              16156842317565293874272834530371880720966471053262404558597773956279093428224],\n                            256],\n                          [with,\n                            len,\n                            [mload, arg],\n                            [seq,\n                              [with,\n                                src,\n                                [add, arg, 32],\n                                [with, dst, [add, 352, concat_ofst], [mstore, dst, [mload, src]]]],\n                              [set, concat_ofst, [add, concat_ofst, len]]]]],\n                        [mstore,\n                          [add, 352, concat_ofst],\n                          /* convert(_from, bytes32) */ [with, arg, [mload, 96 <_from>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore,\n                          [add, 352, concat_ofst],\n                          /* convert(to, bytes32) */ [with, arg, [mload, 128 <to>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore,\n                          [add, 352, concat_ofst],\n                          /* convert(amount, bytes32) */ [with, arg, [mload, 160 <amount>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore, 320 <concat destination>, concat_ofst],\n                        320 <concat destination>]],\n                    [call,\n                      gas,\n                      [mload, 64 <coin>],\n                      0 <value>,\n                      352,\n                      [mload, 320 <concat destination>],\n                      512,\n                      32]]],\n                [seq, [returndatacopy, 0, 0, returndatasize], [revert, 0, returndatasize]]],\n              [seq,\n                [mstore, 480, [select, [lt, 32, returndatasize], 32, returndatasize]],\n                480]],\n            [with,\n              len,\n              [mload, src],\n              [seq,\n                [mstore, 192, len],\n                [with, src, [add, src, 32], [mstore, 224, [mload, src]]]]]],\n          # Line 47\n          /* if len(res) > 0:\n                  assert convert(res, bool) */ \n          [if,\n            /* len(res) > 0 (len(res)>0) (len(res)!=0) */ [iszero, [iszero, /* len(res) */ [mload, 192 <res>]]],\n            [seq,\n              # Line 48\n              /* assert convert(res, bool) */ \n              [assert,\n                /* convert(res, bool) */ \n                [iszero,\n                  [iszero,\n                    /* ('__intrinsic__byte_array_to_num(bool)',) */ \n                    [shr,\n                      [shl, 3, [sub, 32, [mload, 192 <res>]]],\n                      [mload, 224]]]]],\n              pass]],\n          [exit_to,\n            _sym_internal__safeTransferFrom__address_address_address_uint256__cleanup,\n            return_pc],\n          pass]],\n      [label,\n        internal__safeTransferFrom__address_address_address_uint256__cleanup,\n        [var_list, return_pc],\n        [exit_to, return_pc]]],\n    # Line 52\n    [seq,\n      [label,\n        internal__safeApprove__address_address_uint256_,\n        [var_list, return_pc],\n        [seq,\n          # Line 53\n          /* res: Bytes[32] = raw_call(\n                  coin,\n                  concat(\n                      method_id(\"approve(address,uint256)\"),\n                      convert(to, bytes32),\n                      convert(amount, bytes32),\n                  ),\n                  max_outsize=32,\n              ) */ \n          [with,\n            src,\n            /* raw_call(\n                    coin,\n                    concat(\n                        method_id(\"approve(address,uint256)\"),\n                        convert(to, bytes32),\n                        convert(amount, bytes32),\n                    ),\n                    max_outsize=32,\n                ) */ \n            [seq,\n              [if,\n                [iszero,\n                  [seq,\n                    # Line 55\n                    /* concat(\n                                method_id(\"approve(address,uint256)\"),\n                                convert(to, bytes32),\n                                convert(amount, bytes32),\n                            ) */ \n                    [with,\n                      concat_ofst,\n                      0,\n                      [seq,\n                        [with,\n                          arg,\n                          /* method_id(\"approve(address,uint256)\") */ \n                          [seq,\n                            [mstore, 224, 4],\n                            [mstore,\n                              256,\n                              4238056678808933066457772256406219440718756300954938350892797929791311314944],\n                            224],\n                          [with,\n                            len,\n                            [mload, arg],\n                            [seq,\n                              [with,\n                                src,\n                                [add, arg, 32],\n                                [with, dst, [add, 320, concat_ofst], [mstore, dst, [mload, src]]]],\n                              [set, concat_ofst, [add, concat_ofst, len]]]]],\n                        [mstore,\n                          [add, 320, concat_ofst],\n                          /* convert(to, bytes32) */ [with, arg, [mload, 96 <to>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore,\n                          [add, 320, concat_ofst],\n                          /* convert(amount, bytes32) */ [with, arg, [mload, 128 <amount>], arg]],\n                        [set, concat_ofst, [add, concat_ofst, 32]],\n                        [mstore, 288 <concat destination>, concat_ofst],\n                        288 <concat destination>]],\n                    [call,\n                      gas,\n                      [mload, 64 <coin>],\n                      0 <value>,\n                      320,\n                      [mload, 288 <concat destination>],\n                      448,\n                      32]]],\n                [seq, [returndatacopy, 0, 0, returndatasize], [revert, 0, returndatasize]]],\n              [seq,\n                [mstore, 416, [select, [lt, 32, returndatasize], 32, returndatasize]],\n                416]],\n            [with,\n              len,\n              [mload, src],\n              [seq,\n                [mstore, 160, len],\n                [with, src, [add, src, 32], [mstore, 192, [mload, src]]]]]],\n          # Line 63\n          /* if len(res) > 0:\n                  assert convert(res, bool) */ \n          [if,\n            /* len(res) > 0 (len(res)>0) (len(res)!=0) */ [iszero, [iszero, /* len(res) */ [mload, 160 <res>]]],\n            [seq,\n              # Line 64\n              /* assert convert(res, bool) */ \n              [assert,\n                /* convert(res, bool) */ \n                [iszero,\n                  [iszero,\n                    /* ('__intrinsic__byte_array_to_num(bool)',) */ \n                    [shr,\n                      [shl, 3, [sub, 32, [mload, 160 <res>]]],\n                      [mload, 192]]]]],\n              pass]],\n          [exit_to,\n            _sym_internal__safeApprove__address_address_uint256__cleanup,\n            return_pc],\n          pass]],\n      [label,\n        internal__safeApprove__address_address_uint256__cleanup,\n        [var_list, return_pc],\n        [exit_to, return_pc]]]],\n  0]"}